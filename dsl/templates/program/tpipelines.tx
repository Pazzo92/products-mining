from scrapy.exceptions import DropItem
from scrapy.conf import settings
import pymongo

class ProductsMiningPipeline(object):

	{% for criteria in model.criteria %}
	{% if criteria.matches%}
	{{criteria.matches.field}}={% if criteria.matches.value is string %}'{{criteria.matches.value}}'{% else %}{{criteria.matches.value}}{% endif %} 
	{% elif criteria.greaterThan %}
	max_{{criteria.greaterThan.field}} = {{criteria.greaterThan.value}}
	{% elif criteria.lessThan %}
	min_{{criteria.lessThan.field}} = {{criteria.lessThan.value}}
	{% endif %}
	{% endfor %}
	
	def __init__(self):
		connection = pymongo.MongoClient(
			settings['MONGODB_SERVER'],
			settings['MONGODB_PORT']
		)
		db = connection[settings['MONGODB_DB']]
		self.collection = db[settings['MONGODB_COLLECTION']]
	
	def process_item(self, item, spider):
	{% for criteria in model.criteria %}
		{% if loop.first %}
		{% if criteria.matches%}
		if(self.{{criteria.matches.field}} not in item['{{criteria.matches.field}}']
		{% elif criteria.greaterThan %}
		if(self.max_{{criteria.greaterThan.field}} < float(item['{{criteria.greaterThan.field}}'])
		{% elif criteria.lessThan %}
		if(self.min_{{criteria.lessThan.field}} > float(item['{{criteria.lessThan.field}})'])	
		{% endif %}
		{% elif loop.last %}
		{% if criteria.matches%}
		or self.{{criteria.matches.field}} not in item['{{criteria.matches.field}}']):
			raise DropItem("Failed to satisfy criteria: " % item)
		else:
			self.collection.insert(dict(item))
			return item		
		{% elif criteria.greaterThan %}
		or self.max_{{criteria.greaterThan.field}} < float(item['{{criteria.greaterThan.field}})'])):
			raise DropItem("Failed to satisfy criteria: " % item)
		else:
			self.collection.insert(dict(item))
			return item		
		{% elif criteria.lessThan %}
		or self.min_{{criteria.lessThan.field}} > float(item['{{criteria.lessThan.field}})'])):
			raise DropItem("Failed to satisfy criteria: " % item)
		else:
			self.collection.insert(dict(item))
			return item		
		{% endif %}
		{% else %}
		{% if criteria.matches%}
		or self.{{criteria.matches.field}} not in item['{{criteria.matches.field}}']
		{% elif criteria.greaterThan %}
		or self.max_{{criteria.greaterThan.field}} < float(item['{{criteria.greaterThan.field}}'])
		{% elif criteria.lessThan %}
		or self.min_{{criteria.lessThan.field}} > float(item['{{criteria.lessThan.field}})'])		
		{% endif %}
		{% endif %}
	{% endfor %}
