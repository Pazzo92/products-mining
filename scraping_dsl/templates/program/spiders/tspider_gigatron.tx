import scrapy
import re
import unicodedata
{% for type in model.productType %}
{% if type.name == model_main.query.productType %}
import products.spiders.{{type.name.lower()}}_type as custom_module
from products.items import {{type.name}}

class {{type.name}}Spider(scrapy.Spider):
	name = "gigatron_{{type.name.lower()}}"
	
	def start_requests(self):
		url = self.gigatron_dictionary('{{type.name.lower()}}')
		return [scrapy.Request(url, callback=self.get_number_of_items)]

#function that retrieves and loads all the records
	def get_number_of_items(self, response):
		number_of_items = response.css('b#total::text').extract_first()
		return [scrapy.Request(response.request.url+ '?limit=' + number_of_items, callback=self.parse_links)]

# function that enters record needed
	def parse_links(self,response):
		links = response.xpath("//*/h4/a[@class='product-name']/@href").extract()
		for link in links:
			yield scrapy.Request(link)

# main function that parses single entity		
	def parse(self,response):
		
		{{type.name.lower()}} = {{type.name}}()
		properties_list = []
		aliases_dict = {}
		{% for prop in type.properties %}
		{% if prop.selector != None %}
		
		{{prop.name}} = response.css("{{prop.selector.value}}")
		if "{{type.name}}_{{prop.name}}" in dir(custom_module):
			{{type.name.lower()}}['{{prop.name}}']= getattr(custom_module, '{{type.name}}_{{prop.name}}')({{prop.name}})
		else:
			{{type.name.lower()}}['{{prop.name}}'] = {{prop.name}}.extract_first()
		{% else %}		
		properties_list.append('{{prop.name.lower()}}')
		aliases = []
		{% for alias in prop.aliases.alias %}
		aliases.append('{{alias}}')
		{% endfor %}
		aliases_dict['{{prop.name.lower()}}'] = aliases
		{% endif %}
		{% endfor %}

		{% if type.table != None %}
		
		table = response.css("{{type.table.tag.value}}")
		for row in table.css("{{type.table.row.value}}"):
			name = getattr(custom_module, 'Table_name')(row)
			value = getattr(custom_module, 'Table_value')(row)

			if name is not None:
				name = unicodedata.normalize('NFD', name).encode('ascii', 'ignore').decode('utf-8')
			
			for property in properties_list:
				if property == name.lower() or name.lower().replace(' ','_') in aliases_dict[property]:
					{{type.name.lower()}}[property] = re.sub(r'[^a-zA-Z0-9.\-"ÄŒÄ†Ä�Å Å½Å¾Å¡Ä‘Ä‡Ä� ]',r'',value.strip())
				elif '_' in property:
					if property == name.lower().replace(' ','_'):
						{{type.name.lower()}}[property] = re.sub(r'[^a-zA-Z0-9.\-"ÄŒÄ†Ä�Å Å½Å¾Å¡Ä‘Ä‡Ä� ]',r'',value.strip())
		{% endif %}
		yield {{type.name.lower()}}
{% endif %}
{% endfor %} 
	def gigatron_dictionary(self, x):
			return {
        	'laptop': 'https://www.gigatron.rs/laptop_racunari',
        	'tablet': 'https://www.gigatron.rs/tablet_racunari',
        	'racunar': 'https://www.gigatron.rs/gigatron_racunari',
        	'procesor': 'https://www.gigatron.rs/procesori',
        	'maticna_ploca': 'https://www.gigatron.rs/maticne_ploce',
        	'memorija': 'https://www.gigatron.rs/memorije',
        	'hard_disk': 'https://www.gigatron.rs/hard_diskovi',
        	'SSD': 'https://www.gigatron.rs/ssd',
        	'monitor' : 'https://www.gigatron.rs/monitori',
        	'tastatura' : 'https://www.gigatron.rs/tastature',
        	'mis': 'https://www.gigatron.rs/misevi',
        	'slusalice' : 'https://www.gigatron.rs/slusalice',
        	'memorijska_kartica' : 'https://www.gigatron.rs/memorijske_kartice', 
        	'USB_flash' : 'https://www.gigatron.rs/usb_flash_memorija',
        	'stampac' : 'https://www.gigatron.rs/stampaci',
        	'skener' : 'https://www.gigatron.rs/skeneri',
        	'sony' : 'https://www.gigatron.rs/sony',
        	'xbox' : 'https://www.gigatron.rs/xbox',
        	'nintendo' : 'https://www.gigatron.rs/nintendo',
        	'televizor' : 'https://www.gigatron.rs/televizori',
        	'mrezna_karta' : 'https://www.gigatron.rs/mrezne_karte_i_adapteri',
        	'ruter' : 'https://www.gigatron.rs/ruteri',
        	'mobilni_telefon' : 'https://www.gigatron.rs/mobilni_telefoni',
        	'telefon' : 'https://www.gigatron.rs/telefoni',
        	'frizider' : 'https://www.gigatron.rs/frizideri',
        	'zamrzivac' : 'https://www.gigatron.rs/zamrzivaci',
        	'masina_za_ves' : 'https://www.gigatron.rs/masine_za_ves',
        	'sporet' : 'https://www.gigatron.rs/sporeti_ploce_i_rerne',
        	'mikrotalasne' : 'https://www.gigatron.rs/mikrotalasne_rerne',
        	'klima_uredjaj' : 'https://www.gigatron.rs/klima_uredjaji_i_oprema',
        	'bojler' : 'https://www.gigatron.rs/bojleri',
        	'fotoaparat' : 'https://www.gigatron.rs/digitalni_fotoaparati',
        	'gitara' : 'https://www.gigatron.rs/gitare'
        	}.get(x, '')
 	
        